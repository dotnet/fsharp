<Project>

  <UsingTask TaskName="Fsi" AssemblyFile="$(FSharpBuildAssemblyFile)" />

    <Target
        Name="RunFSharpScript"
        Returns=""
        DependsOnTargets="$(CoreCompileDependsOn)"
    >
      <Fsi  Condition=" '%(_CoreCompileResourceInputs.WithCulture)' != 'true' "
            CodePage="$(CodePage)"
            DefineConstants="$(DefineConstants)"
            DisabledWarnings="$(NoWarn)"
            DotnetFsiCompilerPath="$(DotnetFsiCompilerPath)"
            FsiExec="@(FsiExec)"
            LangVersion="$(LangVersion)"
            LCID="$(LCID)"
            LoadSources="@(LoadSource)"
            NoFramework="false"
            Optimize="$(Optimize)"
            OtherFlags="$(OtherFlags)"
            PreferredUILang="$(PreferredUILang)"
            ProvideCommandLineArgs="$(ProvideCommandLineArgs)"
            UseSources="@(UseSource)"
            SkipCompilerExecution="$(SkipCompilerExecution)"
            Sources="@(CompileBefore);@(Compile);@(CompileAfter)"
            Tailcalls="$(Tailcalls)"
            TargetProfile="$(TargetProfile)"
            ToolExe="$(FsiToolExe)"
            ToolPath="$(FsiToolPath)"
            TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
            Utf8Output="$(Utf8Output)"
            WarningLevel="$(WarningLevel)"
            WarningsAsErrors="$(WarningsAsErrors)"
            CaptureTextOutput="true" >
        <Output TaskParameter="CommandLineArgs" ItemName="FsiCommandLineArgs" />
        <Output TaskParameter="TextOutput" ItemName="FsiTextOutput" />
      </Fsi>

      <ItemGroup>
          <_CoreCompileResourceInputs Remove="@(_CoreCompileResourceInputs)" />
      </ItemGroup>
  </Target>

</Project>
