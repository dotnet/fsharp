<Project>
  <Import Project="Version.Details.props" Condition="Exists('Version.Details.props')" />
  <PropertyGroup>
    <!-- opt-out properties -->
    <UsingToolXUnit>false</UsingToolXUnit>
    <!-- opt-in properties -->
    <UsingToolNuGetRepack>true</UsingToolNuGetRepack>
    <UsingToolSymbolUploader>true</UsingToolSymbolUploader>
    <UsingToolVSSDK>true</UsingToolVSSDK>
  </PropertyGroup>
  <!-- Version number computation -->
  <PropertyGroup>
    <!-- Don't use the built in support for pre-release iteration. The nuget repack task doesn't support
         the iteration format at the moment. https://github.com/dotnet/arcade/issues/15919 -->
    <FSharpPreReleaseIteration>1</FSharpPreReleaseIteration>
    <PreReleaseVersionLabel>alpha$(FSharpPreReleaseIteration)</PreReleaseVersionLabel>
    <!-- F# Version components -->
    <FSMajorVersion>11</FSMajorVersion>
    <FSMinorVersion>0</FSMinorVersion>
    <FSBuildVersion>0</FSBuildVersion>
    <FSRevisionVersion>0</FSRevisionVersion>
    <!-- -->
    <!-- F# Language version -->
    <FSLanguageVersion>$(FSMajorVersion).$(FSMinorVersion)</FSLanguageVersion>
    <!-- -->
    <!-- FSharp.Core version -->
    <FSCoreProductVersion>$(FSMajorVersion).$(FSMinorVersion)</FSCoreProductVersion>
    <FSCorePackageVersionValue>$(FSMajorVersion).$(FSMinorVersion).$(FSBuildVersion)</FSCorePackageVersionValue>
    <FSCoreVersionPrefix>$(FSMajorVersion).$(FSMinorVersion).$(FSBuildVersion)</FSCoreVersionPrefix>
    <FSCoreVersion>$(FSMajorVersion).$(FSMinorVersion).0.0</FSCoreVersion>
    <FSCoreShippedVersion>10.0.0.0</FSCoreShippedVersion>
    <!-- -->
    <!-- FSharp.Compiler.Service version -->
    <FCSMajorVersion>43</FCSMajorVersion>
    <FCSMinorVersion>10</FCSMinorVersion>
    <FCSBuildVersion>$(FSBuildVersion)</FCSBuildVersion>
    <FCSRevisionVersion>$(FSRevisionVersion)</FCSRevisionVersion>
    <FSharpCompilerServicePackageVersion>$(FCSMajorVersion).$(FCSMinorVersion).$(FCSBuildVersion)</FSharpCompilerServicePackageVersion>
    <FSharpCompilerServiceVersion>$(FCSMajorVersion).$(FCSMinorVersion).$(FCSBuildVersion).$(FCSRevisionVersion)</FSharpCompilerServiceVersion>
    <FSharpLibrariesChangelogVersion>$(FSMajorVersion).$(FSMinorVersion).$(FSBuildVersion)</FSharpLibrariesChangelogVersion>
    <!-- -->
    <!-- The current published nuget package -->
    <FSharpCoreShippedPackageVersionValue>9.0.303</FSharpCoreShippedPackageVersionValue>
    <!-- -->
    <!-- The pattern for specifying the preview package -->
    <FSharpCorePreviewPackageVersionValue>$(FSCorePackageVersionValue)-$(PreReleaseVersionLabel).*</FSharpCorePreviewPackageVersionValue>
    <!-- -->
    <!-- FSharp tools for Visual Studio version number -->
    <FSToolsMajorVersion>14</FSToolsMajorVersion>
    <FSToolsMinorVersion>0</FSToolsMinorVersion>
    <FSToolsBuildVersion>$(FSBuildVersion)</FSToolsBuildVersion>
    <FSToolsRevisionVersion>$(FSRevisionVersion)</FSToolsRevisionVersion>
    <FSProductVersionPrefix>$(FSToolsMajorVersion).$(FSToolsMinorVersion).$(FSToolsBuildVersion)</FSProductVersionPrefix>
    <FSProductVersion>$(FSToolsMajorVersion).$(FSToolsMinorVersion).$(FSToolsBuildVersion).$(FSToolsRevisionVersion)</FSProductVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- These have to be in sync with latest release branch -->
    <VSMajorVersion>18</VSMajorVersion>
    <VSMinorVersion>0</VSMinorVersion>
    <VSGeneralVersion>$(VSMajorVersion).0</VSGeneralVersion>
    <VSAssemblyVersionPrefix>$(VSMajorVersion).$(VSMinorVersion).0</VSAssemblyVersionPrefix>
    <VSAssemblyVersion>$(VSAssemblyVersionPrefix).0</VSAssemblyVersion>
  </PropertyGroup>
  <!-- version number assignment -->
  <PropertyGroup Condition="'$(UseFSharpPackageVersion)' == 'true'">
    <VersionPrefix>$(FSCoreVersionPrefix)</VersionPrefix>
    <AssemblyVersion>$(FSCoreVersion)</AssemblyVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(UseFSharpPackageVersion)' != 'true'">
    <VersionPrefix>$(FSCoreVersionPrefix)</VersionPrefix>
    <VersionPrefix Condition="'$(UseFSharpProductVersion)' == 'true'">$(FSProductVersionPrefix)</VersionPrefix>
    <VersionPrefix Condition="'$(UseVsMicroBuildAssemblyVersion)' == 'true'">$(VSAssemblyVersionPrefix)</VersionPrefix>
    <VersionPrefix Condition="'$(UseFSharpCompilerServiceVersion)' == 'true'">$(FSharpCompilerServicePackageVersion)</VersionPrefix>
    <AssemblyVersion>$(VersionPrefix).0</AssemblyVersion>
    <!-- PR builds should explicitly specify a version number -->
  </PropertyGroup>
  <!-- Dependencies from maintenance-packages, source-build specific -->
  <PropertyGroup Condition="'$(DotNetBuildSourceOnly)' == 'true'">
    <SystemBuffersVersion>4.6.1</SystemBuffersVersion>
    <SystemMemoryVersion>4.6.3</SystemMemoryVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.2</SystemRuntimeCompilerServicesUnsafeVersion>
  </PropertyGroup>
  <!-- Dependencies from maintenance-packages, everything else -->
  <PropertyGroup Condition="'$(DotNetBuildSourceOnly)' != 'true'">
    <SystemBuffersVersion>4.6.0</SystemBuffersVersion>
    <SystemMemoryVersion>4.6.0</SystemMemoryVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>6.1.0</SystemRuntimeCompilerServicesUnsafeVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- System.* packages -->
    <!-- If a System.* package is stuck on version 4.3.x, targets .NET Standard 1.x and hasn't been
    updated in years, you most likely DON'T need it, please exercise caution when adding it to the list. -->
    <SystemReflectionEmitVersion>4.7.0</SystemReflectionEmitVersion>
    <MicrosoftDiaSymReaderPortablePdbVersion>1.6.0</MicrosoftDiaSymReaderPortablePdbVersion>
    <!-- Versions for package groups -->
    <VisualStudioEditorPackagesVersion>18.0.332-preview</VisualStudioEditorPackagesVersion>
    <MicrosoftVisualStudioShellPackagesVersion>18.0.2101-preview.1</MicrosoftVisualStudioShellPackagesVersion>
    <VisualStudioProjectSystemPackagesVersion>18.0.1237-pre</VisualStudioProjectSystemPackagesVersion>
    <VisualStudioShellProjectsPackages>18.0.2077-preview.1</VisualStudioShellProjectsPackages>
    <MicrosoftVisualStudioThreadingPackagesVersion>18.0.5</MicrosoftVisualStudioThreadingPackagesVersion>
  
    <!-- Roslyn packages -->
    <MicrosoftCodeAnalysisEditorFeaturesTextVersion>5.0.0-2.25480.7</MicrosoftCodeAnalysisEditorFeaturesTextVersion>
    <MicrosoftCodeAnalysisExternalAccessFSharpVersion>5.0.0-2.25480.7</MicrosoftCodeAnalysisExternalAccessFSharpVersion>
    <MicrosoftCodeAnalysisVersion>5.0.0-2.25480.7</MicrosoftCodeAnalysisVersion>
    <MicrosoftCodeAnalysisCSharpVersion>5.0.0-2.25480.7</MicrosoftCodeAnalysisCSharpVersion>
    <MicrosoftVisualStudioLanguageServicesVersion>5.0.0-2.25480.7</MicrosoftVisualStudioLanguageServicesVersion>
    <MicrosoftCodeAnalysisTestResourcesProprietaryVersion>2.0.28</MicrosoftCodeAnalysisTestResourcesProprietaryVersion>
	<!-- Roslyn for when we need to compile C# in tests. .dll hell caused by vstest makes newer version fail at runtime -->
	<RoslynForTestingButNotForVSLayer>4.14.0</RoslynForTestingButNotForVSLayer>
    <!-- -->
    <!-- Visual Studio Shell packages -->
    <MicrosoftVisualStudioInteropVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioInteropVersion>
    <MicrosoftVisualStudioImagingInterop140DesignTimeVersion>$(VisualStudioShellProjectsPackages)</MicrosoftVisualStudioImagingInterop140DesignTimeVersion>
    <MicrosoftVisualStudioShellInteropVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioShellInteropVersion>
    <MicrosoftVisualStudioTextManagerInteropVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioTextManagerInteropVersion>
    <MicrosoftVisualStudioOLEInteropVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioOLEInteropVersion>
    <MicrosoftVisualStudioShellDesignVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioShellDesignVersion>
    <MicrosoftInternalVisualStudioShellFrameworkVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftInternalVisualStudioShellFrameworkVersion>
    <MicrosoftVisualStudioPackageLanguageService150Version>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioPackageLanguageService150Version>
    <MicrosoftVisualStudioManagedInterfacesVersion>$(VisualStudioShellProjectsPackages)</MicrosoftVisualStudioManagedInterfacesVersion>
    <MicrosoftVisualStudioDesignerInterfacesVersion>$(MicrosoftVisualStudioShellPackagesVersion)</MicrosoftVisualStudioDesignerInterfacesVersion>
    <MicrosoftVisualStudioShellImmutable100Version>10.0.30319</MicrosoftVisualStudioShellImmutable100Version>
    <MicrosoftVisualStudioShellImmutable110Version>11.0.50727</MicrosoftVisualStudioShellImmutable110Version>
    <MicrosoftVisualStudioShellImmutable150Version>15.0.25123-Dev15Preview</MicrosoftVisualStudioShellImmutable150Version>

    <!-- -->
    <!-- Visual Studio Editor packages -->
    <MicrosoftVisualStudioEditorVersion>$(VisualStudioEditorPackagesVersion)</MicrosoftVisualStudioEditorVersion>
    <MicrosoftVisualStudioLanguageStandardClassificationVersion>$(VisualStudioEditorPackagesVersion)</MicrosoftVisualStudioLanguageStandardClassificationVersion>
    <MicrosoftVisualStudioLanguageIntellisenseVersion>$(VisualStudioEditorPackagesVersion)</MicrosoftVisualStudioLanguageIntellisenseVersion>
    <MicrosoftVisualStudioPlatformVSEditorVersion>$(VisualStudioEditorPackagesVersion)</MicrosoftVisualStudioPlatformVSEditorVersion>
    <MicrosoftVisualStudioTextUIWpfVersion>$(VisualStudioEditorPackagesVersion)</MicrosoftVisualStudioTextUIWpfVersion>
    <NuGetSolutionRestoreManagerInteropVersion>5.6.0</NuGetSolutionRestoreManagerInteropVersion>
    <MicrosoftVisualStudioExtensibilityTestingVersion>0.1.800-beta</MicrosoftVisualStudioExtensibilityTestingVersion>
    <MicrosoftVisualStudioExtensibilityTestingSourceGeneratorVersion>$(MicrosoftVisualStudioExtensibilityTestingVersion)</MicrosoftVisualStudioExtensibilityTestingSourceGeneratorVersion>

    <!-- Visual Studio Threading packages -->
    <MicrosoftVisualStudioThreadingVersion>$(MicrosoftVisualStudioThreadingPackagesVersion)</MicrosoftVisualStudioThreadingVersion>

    <!-- Visual Studio Project System packages-->
    <MicrosoftVisualStudioProjectSystemVersion>$(VisualStudioProjectSystemPackagesVersion)</MicrosoftVisualStudioProjectSystemVersion>
    <MicrosoftVisualStudioProjectSystemManagedVersion>2.3.6152103</MicrosoftVisualStudioProjectSystemManagedVersion>

    <!-- Misc. Visual Studio packages -->
    <MicrosoftVSSDKBuildToolsVersion>17.14.2120</MicrosoftVSSDKBuildToolsVersion>
    <MicrosoftVisualFSharpMicrosoftVisualStudioShellUIInternalVersion>17.0.0</MicrosoftVisualFSharpMicrosoftVisualStudioShellUIInternalVersion>
    <!-- -->
    <!-- setup packages -->
    <MicroBuildCoreVersion>0.2.0</MicroBuildCoreVersion>
    <MicroBuildCoreSentinelVersion>1.0.0</MicroBuildCoreSentinelVersion>
    <MicroBuildPluginsSwixBuildVersion>1.1.87</MicroBuildPluginsSwixBuildVersion>
    <!-- -->
    <!-- other packages -->
    <BenchmarkDotNetVersion>0.13.10</BenchmarkDotNetVersion>
    <FsCheckVersion>2.16.5</FsCheckVersion>
    <MicrosoftCompositionVersion>1.0.31</MicrosoftCompositionVersion>
    <MicrosoftNetCompilersVersion>4.3.0-1.22220.8</MicrosoftNetCompilersVersion>
     <!-- Making diff way too large, update separately later. e.g. to 6.0.0-rtm.21518.12 and 9.0.0-rc.2.24462.10 or via darc -->
    <MicrosoftNETCoreILDAsmVersion>5.0.0-preview.7.20364.11</MicrosoftNETCoreILDAsmVersion>
    <MicrosoftNETCoreILAsmVersion>5.0.0-preview.7.20364.11</MicrosoftNETCoreILAsmVersion>
    <MicrosoftNETTestSdkVersion>17.14.1</MicrosoftNETTestSdkVersion>
    <NewtonsoftJsonVersion>13.0.3</NewtonsoftJsonVersion>
    <XUnitVersion>2.9.0</XUnitVersion>
    <XUnitRunnerVersion>3.1.4</XUnitRunnerVersion>
    <XunitXmlTestLoggerVersion>3.1.17</XunitXmlTestLoggerVersion>
    <!-- -->
  </PropertyGroup>
</Project>
