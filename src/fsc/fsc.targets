<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  See License.txt in the project root for license information. -->
<Project>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <Configurations>Debug;Release;Proto</Configurations>
    <NoWarn>$(NoWarn);44</NoWarn> <!-- Obsolete -->
    <NoWarn>$(NoWarn);75</NoWarn> <!-- InternalCommandLineOption -->
    <AllowCrossTargeting>true</AllowCrossTargeting>
  </PropertyGroup>

  <!--  The fsc application does not provide a referencable public interface  -->
  <PropertyGroup>
    <NoOptimizationData>true</NoOptimizationData>
    <NoInterfaceData>true</NoInterfaceData>
    <CompressMetadata>true</CompressMetadata>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedText Include="$(MSBuildThisFileDirectory)..\LegacyMSBuildResolver\LegacyResolver.txt">
      <Link>LegacyResolver.txt</Link>
    </EmbeddedText>
    <Compile Include="$(MSBuildThisFileDirectory)..\LegacyMSBuildResolver\LegacyMSBuildReferenceResolver.fsi" />
    <Compile Include="$(MSBuildThisFileDirectory)..\LegacyMSBuildResolver\LegacyMSBuildReferenceResolver.fs" />
    <Compile Include="$(MSBuildThisFileDirectory)fscmain.fs" />
    <NoneSubstituteText Include="$(MSBuildThisFileDirectory)App.config">
      <Pattern1>{{FSCoreVersion}}</Pattern1>
      <Replacement1>$(FSCoreVersion)</Replacement1>
    </NoneSubstituteText>
  </ItemGroup>

    <ItemGroup Condition="'$(FSHARPCORE_USE_PACKAGE)' != 'true'">
    <ProjectReference Include="$(FSharpSourcesRoot)\FSharp.Core\FSharp.Core.fsproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(FSHARPCORE_USE_PACKAGE)' == 'true'">
    <PackageReference Include="FSharp.Core" Version="$(FSharpCoreShippedPackageVersionValue)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(MSBuildThisFileDirectory)../FSharp.Build/FSharp.Build.fsproj" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)../Compiler/FSharp.Compiler.Service.fsproj" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)../FSharp.DependencyManager.Nuget/FSharp.DependencyManager.Nuget.fsproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- MIBC data to use when exact architecture match is available -->
    <MIBCPackageDef Include="optimization.windows_nt-x86.mibc.runtime"   Version="$(optimizationwindows_ntx86MIBCRuntimeVersion)"   MibcArchitecture="windows/x86" />
    <MIBCPackageDef Include="optimization.windows_nt-x64.mibc.runtime"   Version="$(optimizationwindows_ntx64MIBCRuntimeVersion)"   MibcArchitecture="windows/x64" />
    <MIBCPackageDef Include="optimization.windows_nt-arm64.mibc.runtime" Version="$(optimizationwindows_ntarm64MIBCRuntimeVersion)" MibcArchitecture="windows/arm64" />
    <MIBCPackageDef Include="optimization.linux-x64.mibc.runtime"        Version="$(optimizationlinuxx64MIBCRuntimeVersion)"        MibcArchitecture="linux/x64" />
    <MIBCPackageDef Include="optimization.linux-arm64.mibc.runtime"      Version="$(optimizationlinuxarm64MIBCRuntimeVersion)"      MibcArchitecture="linux/arm64" />

    <!-- MIBC data to use when exact architecture match is not available -->
    <MIBCPackageDef Include="optimization.windows_nt-x64.mibc.runtime" Version="$(optimizationwindows_ntx64MIBCRuntimeVersion)" MibcArchitecture="windows" />
    <MIBCPackageDef Include="optimization.linux-x64.mibc.runtime"      Version="$(optimizationlinuxx64MIBCRuntimeVersion)"      MibcArchitecture="linux" />
    <MIBCPackageDef Include="optimization.linux-x64.mibc.runtime"      Version="$(optimizationlinuxx64MIBCRuntimeVersion)"      MibcArchitecture="osx" />

    <MIBCPackage Include="@(MIBCPackageDef->HasMetadata('MibcArchitecture')->WithMetadataValue('MibcArchitecture','$(TargetOS)/$(TargetArchitecture)'))" />
    <MIBCPackage Include="@(MIBCPackageDef->HasMetadata('MibcArchitecture')->WithMetadataValue('MibcArchitecture','$(TargetOS)'))" Condition="'@(MIBCPackage)' == ''" />

    <!-- Fallback in case no OS specific data is available -->
    <MIBCPackage Include="optimization.linux-x64.mibc.runtime" Version="$(optimizationlinuxx64MIBCRuntimeVersion)" Condition="'@(MIBCPackage)' == ''" />

  </ItemGroup>


  <ItemGroup>
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="$(SystemDiagnosticsDiagnosticSourceVersion)" />
    <PackageReference Include="System.Memory" Version="$(SystemMemoryVersion)" />
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="$(SystemRuntimeCompilerServicesUnsafeVersion)" />
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
    <PackageReference Include="Microsoft.Build.Framework" Version="$(MicrosoftBuildFrameworkVersion)" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="$(MicrosoftBuildTasksCoreVersion)" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="$(MicrosoftBuildUtilitiesCoreVersion)" />

    <!-- Reference MIBC optimization assemblies -->
    <PackageReference Include="@(MIBCPackage)" />

  </ItemGroup>

</Project>
