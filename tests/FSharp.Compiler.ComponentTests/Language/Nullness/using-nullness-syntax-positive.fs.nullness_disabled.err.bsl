using-nullness-syntax-positive.fs (13,18)-(13,24) typecheck error Nullness warning: The type ''a option' uses 'null' as a representation value but a non-null type is expected.
using-nullness-syntax-positive.fs (19,26)-(19,28) typecheck error Nullness warning: The type 'int option' uses 'null' as a representation value but a non-null type is expected.
using-nullness-syntax-positive.fs (217,14)-(217,16) typecheck error The struct, record or union type 'C7' is not structurally comparable because the type '(int -> int) | null' does not satisfy the 'comparison' constraint. Consider adding the 'NoComparison' attribute to the type 'C7' to clarify that the type is not comparable
using-nullness-syntax-positive.fs (217,14)-(217,16) typecheck error The struct, record or union type 'C7' does not support structural equality because the type '(int -> int) | null' does not satisfy the 'equality' constraint. Consider adding the 'NoEquality' attribute to the type 'C7' to clarify that the type does not support structural equality
using-nullness-syntax-positive.fs (214,25)-(214,31) typecheck error The type of a field using the 'DefaultValue' attribute must admit default initialization, i.e. have 'null' as a proper value or be a struct type whose fields all admit default initialization. You can use 'DefaultValue(false)' to disable this check
using-nullness-syntax-positive.fs (219,25)-(219,31) typecheck error The type of a field using the 'DefaultValue' attribute must admit default initialization, i.e. have 'null' as a proper value or be a struct type whose fields all admit default initialization. You can use 'DefaultValue(false)' to disable this check