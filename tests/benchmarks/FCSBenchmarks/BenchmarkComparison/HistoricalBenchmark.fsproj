<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6</TargetFramework>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <Configurations>Release</Configurations>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
  </PropertyGroup>
  
  <PropertyGroup>
    <FcsReferenceType Condition="'$(FcsReferenceType)' == ''">project</FcsReferenceType>
    <FcsProjectPath Condition="'$(FcsProjectPath)' == ''">..\..\..\..\src\Compiler\FSharp.Compiler.Service.fsproj</FcsProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Helpers.fs" />
    <Compile Include="SingleFileCompiler.fs" />
    <Compile Include="Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BenchmarkDotNet" Version="0.13.1" />
  </ItemGroup>

  <!-- Reference FCS in one of three different ways -->

  <!-- Reference a project -->
  <ItemGroup Condition="'$(FcsReferenceType)' == 'project'">
    <ProjectReference Include="$(FcsProjectPath)" />
    <ProjectReference Include="..\..\..\..\src\FSharp.Core\FSharp.Core.fsproj" />
  </ItemGroup>
  <!-- Reference the FCS NuGet package with the specified $FcsVersion -->
  <ItemGroup Condition=" '$(FcsReferenceType)' == 'nuget' ">
    <PackageReference Include="FSharp.Compiler.Service" Version="$(FcsNuGetVersion)" />
    <ProjectReference Include="..\..\..\..\src\FSharp.Core\FSharp.Core.fsproj" />
  </ItemGroup>
  <!-- Reference the dll specified in $FcsDllPath -->
  <ItemGroup Condition=" '$(FcsReferenceType)' == 'dll' ">
    <Reference Include="FSharp.Compiler.Service">
      <HintPath>$(FcsDllPath)</HintPath>
    </Reference>
    <Reference Include="FSharp.Core">
      <HintPath>$(FSharpCoreDllPath)</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="FakeBuild" BeforeTargets="Build">
    <Message Text="Type=$(FcsReferenceType) FcsDllPath=$(FcsDllPath)"/>
  </Target>

</Project>
