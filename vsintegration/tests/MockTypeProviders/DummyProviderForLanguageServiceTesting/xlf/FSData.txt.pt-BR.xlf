<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../FSData.resx">
    <body>
      <trans-unit id="connectionInfo">
        <source>Gets the connection used by the object context</source>
        <target state="new">Gets the connection used by the object context</target>
        <note />
      </trans-unit>
      <trans-unit id="connectionStringNotFound">
        <source>Connection string '{0}' not found in configuration file.</source>
        <target state="new">Connection string '{0}' not found in configuration file.</target>
        <note />
      </trans-unit>
      <trans-unit id="constructorFor">
        <source>constructor for {0}</source>
        <target state="new">constructor for {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="containerTypeAlreadySet">
        <source>container type for '{0}' was already set to '{1}'</source>
        <target state="new">container type for '{0}' was already set to '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="dataDirectoryNotFound">
        <source>The data directory '{0}' did not exist.</source>
        <target state="new">The data directory '{0}' did not exist.</target>
        <note />
      </trans-unit>
      <trans-unit id="dbmlFileTypeHelp">
        <source>&lt;summary&gt;Provides the types to access a database with the schema in a DBML file, using a LINQ-to-SQL mapping&lt;/summary&gt;&lt;param name='File'&gt;The DBML file containing the schema description&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='ContextTypeName'&gt;The name of data context class (default: derived from database name)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate uni-directional serializable classes (default: false, which means no serialization)&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access a database with the schema in a DBML file, using a LINQ-to-SQL mapping&lt;/summary&gt;&lt;param name='File'&gt;The DBML file containing the schema description&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='ContextTypeName'&gt;The name of data context class (default: derived from database name)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate uni-directional serializable classes (default: false, which means no serialization)&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="declaringTypeAlreadySet">
        <source>ProvidedConstructor: declaringType already set on '{0}'</source>
        <target state="new">ProvidedConstructor: declaringType already set on '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="dqsServicesNotSupported">
        <source>Services that implement the Data Quality Services API are not supported.</source>
        <target state="new">Services that implement the Data Quality Services API are not supported.</target>
        <note />
      </trans-unit>
      <trans-unit id="edmxFileRequiresDotNet45">
        <source>File '{0}' requires .NET 4.5. To use this file please change project target framework to .NET 4.5.</source>
        <target state="new">File '{0}' requires .NET 4.5. To use this file please change project target framework to .NET 4.5.</target>
        <note />
      </trans-unit>
      <trans-unit id="edmxFileTypeHelp">
        <source>&lt;summary&gt;Provides the types to access a database with the schema in an EDMX file, using a LINQ-to-Entities mapping&lt;/summary&gt;&lt;param name='File'&gt;The EDMX file containing the conceptual, storage and mapping schema descriptions&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access a database with the schema in an EDMX file, using a LINQ-to-Entities mapping&lt;/summary&gt;&lt;param name='File'&gt;The EDMX file containing the conceptual, storage and mapping schema descriptions&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="errorInvalidExtensionSchema">
        <source>The extension of the given LocalSchema file '{0}' is not valid. The required extension is '{1}'.</source>
        <target state="new">The extension of the given LocalSchema file '{0}' is not valid. The required extension is '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="errorReadingSchema">
        <source>Error reading schema. {0}</source>
        <target state="new">Error reading schema. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="errorWhileReadingConnectionStringInConfigFile">
        <source>An error occured while reading connection string '{0}' from the config file '{1}': '{2}'</source>
        <target state="new">An error occured while reading connection string '{0}' from the config file '{1}': '{2}'</target>
        <note />
      </trans-unit>
      <trans-unit id="errorWritingLocalSchemaFile">
        <source>Error writing to local schema file. {0}</source>
        <target state="new">Error writing to local schema file. {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="failedToLoadFileAsXML">
        <source>Failed to load the file '{0}' as XML</source>
        <target state="new">Failed to load the file '{0}' as XML</target>
        <note />
      </trans-unit>
      <trans-unit id="fileDoesNotContainXMLElement">
        <source>The file '{0}' doesn't contain XML element '{1}'</source>
        <target state="new">The file '{0}' doesn't contain XML element '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="fixedQueriesNotSupported">
        <source>The provided ServiceUri is for a data service that supports fixed queries. The OData type provider does not support such services.</source>
        <target state="new">The provided ServiceUri is for a data service that supports fixed queries. The OData type provider does not support such services.</target>
        <note />
      </trans-unit>
      <trans-unit id="getMethodImplDoesNotSupportOverloads">
        <source>GetMethodImpl does not support overloads</source>
        <target state="new">GetMethodImpl does not support overloads</target>
        <note />
      </trans-unit>
      <trans-unit id="gpiNeedToHandleBinder">
        <source>Need to handle binder in GetPropertyImpl</source>
        <target state="new">Need to handle binder in GetPropertyImpl</target>
        <note />
      </trans-unit>
      <trans-unit id="gpiNeedToHandleSpecifiedModifiers">
        <source>Need to handle specified modifiers in GetPropertyImpl</source>
        <target state="new">Need to handle specified modifiers in GetPropertyImpl</target>
        <note />
      </trans-unit>
      <trans-unit id="gpiNeedToHandleSpecifiedParameterTypes">
        <source>Need to handle specified parameter types in GetPropertyImpl</source>
        <target state="new">Need to handle specified parameter types in GetPropertyImpl</target>
        <note />
      </trans-unit>
      <trans-unit id="gpiNeedToHandleSpecifiedReturnType">
        <source>Need to handle specified return type in GetPropertyImpl</source>
        <target state="new">Need to handle specified return type in GetPropertyImpl</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidConnectionString">
        <source>The supplied connection string should be either a valid provider-specific connection string or a valid connection string accepted by the EntityClient.</source>
        <target state="new">The supplied connection string should be either a valid provider-specific connection string or a valid connection string accepted by the EntityClient.</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidConnectionStringInConfigFile">
        <source>Invalid empty connection string '{0}' for the connection string name '{1}' in config file '{2}'</source>
        <target state="new">Invalid empty connection string '{0}' for the connection string name '{1}' in config file '{2}'</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidDataContextClassName">
        <source>{0} is not valid name for data context class</source>
        <target state="new">{0} is not valid name for data context class</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidOperationOnProvidedType">
        <source>The operation '{0}' on item '{1}' should not be called on provided type, member or parameter</source>
        <target state="new">The operation '{0}' on item '{1}' should not be called on provided type, member or parameter</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidProviderInConfigFile">
        <source>Invalid provider '{0}' in connection string entry '{1}' in config file '{2}'. SqlDataConnection can only be used with provider 'System.Data.SqlClient'.</source>
        <target state="new">Invalid provider '{0}' in connection string entry '{1}' in config file '{2}'. SqlDataConnection can only be used with provider 'System.Data.SqlClient'.</target>
        <note />
      </trans-unit>
      <trans-unit id="invalidWsdlUri">
        <source>The parameter 'ServiceUri' cannot be an empty string.</source>
        <target state="new">The parameter 'ServiceUri' cannot be an empty string.</target>
        <note />
      </trans-unit>
      <trans-unit id="moreThanOneNestedType">
        <source>There is more than one nested type called '{0}' in type '{1}'</source>
        <target state="new">There is more than one nested type called '{0}' in type '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="noConfigFileFound1">
        <source>A configuration string name was specified but no configuration file was found. Neither app.config nor web.config found in project or script directory.</source>
        <target state="new">A configuration string name was specified but no configuration file was found. Neither app.config nor web.config found in project or script directory.</target>
        <note />
      </trans-unit>
      <trans-unit id="noConfigFileFound2">
        <source>A configuration string name was specified but the configuration file '{0}' was not found</source>
        <target state="new">A configuration string name was specified but the configuration file '{0}' was not found</target>
        <note />
      </trans-unit>
      <trans-unit id="noConnectionStringOrConnectionStringName">
        <source>When using this provider you must specify either a connection string or a connection string name. To specify a connection string, use {0}&lt;\"...connection string...\"&gt;.</source>
        <target state="new">When using this provider you must specify either a connection string or a connection string name. To specify a connection string, use {0}&lt;\"...connection string...\"&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="nonArrayType">
        <source>non-array type</source>
        <target state="new">non-array type</target>
        <note />
      </trans-unit>
      <trans-unit id="nonEquivalentConnectionString">
        <source>Connection string presented in EntityClient format can differ only in provider-specific part.</source>
        <target state="new">Connection string presented in EntityClient format can differ only in provider-specific part.</target>
        <note />
      </trans-unit>
      <trans-unit id="nonGenericType">
        <source>non-generic type</source>
        <target state="new">non-generic type</target>
        <note />
      </trans-unit>
      <trans-unit id="notAnArrayPointerOrByref">
        <source>not an array, pointer or byref type</source>
        <target state="new">not an array, pointer or byref type</target>
        <note />
      </trans-unit>
      <trans-unit id="notBothConnectionStringOrConnectionStringName">
        <source>When using this provider you must specify either a connection string or a connection string name, but not both. To specify a connection string, use SqlDataConnection&lt;\"...connection string...\"&gt;.</source>
        <target state="new">When using this provider you must specify either a connection string or a connection string name, but not both. To specify a connection string, use SqlDataConnection&lt;\"...connection string...\"&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="notYetKnownType">
        <source>&lt;not yet known type&gt;</source>
        <target state="new">&lt;not yet known type&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="odataServiceCredentialsInfo">
        <source>Gets or sets the authentication information used by each query for this data context object</source>
        <target state="new">Gets or sets the authentication information used by each query for this data context object</target>
        <note />
      </trans-unit>
      <trans-unit id="odataServiceTypeHelp">
        <source>&lt;summary&gt;Provides the types to access an OData service&lt;/summary&gt;&lt;param name="ServiceUri"&gt;The Uri for the OData service&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local .csdl file for the service schema&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the service be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='DataServiceCollection'&gt;Generate collections derived from DataServiceCollection (default: false)&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access an OData service&lt;/summary&gt;&lt;param name="ServiceUri"&gt;The Uri for the OData service&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local .csdl file for the service schema&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the service be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='DataServiceCollection'&gt;Generate collections derived from DataServiceCollection (default: false)&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="pcCodeAlreadyGiven">
        <source>ProvidedConstructor: code already given for '{0}'</source>
        <target state="new">ProvidedConstructor: code already given for '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="pcNoInvoker">
        <source>ProvidedConstructor: no invoker for '{0}'</source>
        <target state="new">ProvidedConstructor: no invoker for '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="pcNoInvokerName">
        <source>ProvidedConstructor: code already given for {0} on type {1}</source>
        <target state="new">ProvidedConstructor: code already given for {0} on type {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="pdDefineStaticParametersNotCalled">
        <source>ProvidedTypeDefinition: DefineStaticParameters was not called</source>
        <target state="new">ProvidedTypeDefinition: DefineStaticParameters was not called</target>
        <note />
      </trans-unit>
      <trans-unit id="pdErrorExpectingStaticParameters">
        <source>ProvidedTypeDefinition: expecting {0} static parameters but given {1} for type {2}</source>
        <target state="new">ProvidedTypeDefinition: expecting {0} static parameters but given {1} for type {2}</target>
        <note />
      </trans-unit>
      <trans-unit id="pmNoInvokerName">
        <source>ProvidedMethod: no invoker for {0} on type {1}</source>
        <target state="new">ProvidedMethod: no invoker for {0} on type {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ppGetterAlreadyCreated">
        <source>ProvidedProperty: getter MethodInfo has already been created</source>
        <target state="new">ProvidedProperty: getter MethodInfo has already been created</target>
        <note />
      </trans-unit>
      <trans-unit id="ppSetterAlreadyCreated">
        <source>ProvidedProperty: setter MethodInfo has already been created</source>
        <target state="new">ProvidedProperty: setter MethodInfo has already been created</target>
        <note />
      </trans-unit>
      <trans-unit id="ptdStaticParametersSuppliedButNotExpected">
        <source>ProvidedTypeDefinition: static parameters supplied but not expected for {0}</source>
        <target state="new">ProvidedTypeDefinition: static parameters supplied but not expected for {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="requiredToolNotFound">
        <source>The required tool '{0}' could not be found.</source>
        <target state="new">The required tool '{0}' could not be found.</target>
        <note />
      </trans-unit>
      <trans-unit id="serviceMetadataFileElementIsEmpty">
        <source>ServiceMetadataFile element cannot be empty</source>
        <target state="new">ServiceMetadataFile element cannot be empty</target>
        <note />
      </trans-unit>
      <trans-unit id="sqlDataConnection">
        <source>SQL connection</source>
        <target state="new">SQL connection</target>
        <note />
      </trans-unit>
      <trans-unit id="sqlDataConnectionInfo">
        <source>Gets the connection used by the framework</source>
        <target state="new">Gets the connection used by the framework</target>
        <note />
      </trans-unit>
      <trans-unit id="sqlDataConnectionTypeHelp">
        <source>&lt;summary&gt;Provides the types to access a database, using a LINQ-to-SQL mapping&lt;/summary&gt;&lt;param name='ConnectionString'&gt;The connection string for the database connection. If using Visual Studio, a connection string can be found in database properties in the Server Explorer window.&lt;/param&gt;&lt;param name='ConnectionStringName'&gt;The name of the connection string for the database connection in the configuration file.&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local .dbml file for the database schema (default: no local schema file)&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the database be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='Pluralize'&gt;Automatically pluralize or singularize class and member names using English language rules (default: false)&lt;/param&gt;&lt;param name='Views'&gt;Extract database views (default: true)&lt;/param&gt;&lt;param name='Functions'&gt;Extract database functions (default: true)&lt;/param&gt;&lt;param name='ConfigFile'&gt;The name of the configuration file used for connection strings (default: app.config or web.config is used)&lt;/param&gt;&lt;param name='DataDirectory'&gt;The name of the data directory, used to replace |DataDirectory| in connection strings (default: the project or script directory)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='StoredProcedures'&gt;Extract stored procedures (default: true)&lt;/param&gt;&lt;param name='Timeout'&gt;Timeout value in seconds to use when SqlMetal accesses the database (default: 0, which means infinite)&lt;/param&gt;&lt;param name='ContextTypeName'&gt;The name of data context class (default: derived from database name)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate uni-directional serializable classes (default: false, which means no serialization)&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access a database, using a LINQ-to-SQL mapping&lt;/summary&gt;&lt;param name='ConnectionString'&gt;The connection string for the database connection. If using Visual Studio, a connection string can be found in database properties in the Server Explorer window.&lt;/param&gt;&lt;param name='ConnectionStringName'&gt;The name of the connection string for the database connection in the configuration file.&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local .dbml file for the database schema (default: no local schema file)&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the database be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='Pluralize'&gt;Automatically pluralize or singularize class and member names using English language rules (default: false)&lt;/param&gt;&lt;param name='Views'&gt;Extract database views (default: true)&lt;/param&gt;&lt;param name='Functions'&gt;Extract database functions (default: true)&lt;/param&gt;&lt;param name='ConfigFile'&gt;The name of the configuration file used for connection strings (default: app.config or web.config is used)&lt;/param&gt;&lt;param name='DataDirectory'&gt;The name of the data directory, used to replace |DataDirectory| in connection strings (default: the project or script directory)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='StoredProcedures'&gt;Extract stored procedures (default: true)&lt;/param&gt;&lt;param name='Timeout'&gt;Timeout value in seconds to use when SqlMetal accesses the database (default: 0, which means infinite)&lt;/param&gt;&lt;param name='ContextTypeName'&gt;The name of data context class (default: derived from database name)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate uni-directional serializable classes (default: false, which means no serialization)&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="sqlEntityConnection">
        <source>SQL Entity connection</source>
        <target state="new">SQL Entity connection</target>
        <note />
      </trans-unit>
      <trans-unit id="sqlEntityConnectionTypeHelp">
        <source>&lt;summary&gt;Provides the types to access a database, using a LINQ-to-Entities mapping&lt;/summary&gt;&lt;param name='ConnectionString'&gt;The connection string for the database connection&lt;/param&gt;&lt;param name='ConnectionStringName'&gt;The name of the connection string for the database connection in the configuration file.&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local file for the database schema&lt;/param&gt;&lt;param name='Provider'&gt;The name of the ADO.NET data provider to be used for ssdl generation (default: System.Data.SqlClient)&lt;/param&gt;&lt;param name='EntityContainer'&gt;The name to use for the EntityContainer in the conceptual model&lt;/param&gt;&lt;param name='ConfigFile'&gt;The name of the configuration file used for connection strings (default: app.config or web.config is used)&lt;/param&gt;&lt;param name='DataDirectory'&gt;The name of the data directory, used to replace |DataDirectory| in connection strings (default: the project or script directory)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the database be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='Pluralize'&gt;Automatically pluralize or singularize class and member names using English language rules (default: false)&lt;/param&gt;&lt;param name='SuppressForeignKeyProperties'&gt;Exclude foreign key properties in entity type definitions (default: false)&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access a database, using a LINQ-to-Entities mapping&lt;/summary&gt;&lt;param name='ConnectionString'&gt;The connection string for the database connection&lt;/param&gt;&lt;param name='ConnectionStringName'&gt;The name of the connection string for the database connection in the configuration file.&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The local file for the database schema&lt;/param&gt;&lt;param name='Provider'&gt;The name of the ADO.NET data provider to be used for ssdl generation (default: System.Data.SqlClient)&lt;/param&gt;&lt;param name='EntityContainer'&gt;The name to use for the EntityContainer in the conceptual model&lt;/param&gt;&lt;param name='ConfigFile'&gt;The name of the configuration file used for connection strings (default: app.config or web.config is used)&lt;/param&gt;&lt;param name='DataDirectory'&gt;The name of the data directory, used to replace |DataDirectory| in connection strings (default: the project or script directory)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the database be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='Pluralize'&gt;Automatically pluralize or singularize class and member names using English language rules (default: false)&lt;/param&gt;&lt;param name='SuppressForeignKeyProperties'&gt;Exclude foreign key properties in entity type definitions (default: false)&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="staticParameterNotFoundForType">
        <source>static parameter '{0}' not found for type '{1}'</source>
        <target state="new">static parameter '{0}' not found for type '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="typeNotAddedAsAMember">
        <source>type '{0}' was not added as a member to a declaring type</source>
        <target state="new">type '{0}' was not added as a member to a declaring type</target>
        <note />
      </trans-unit>
      <trans-unit id="unexpectedMethodBase">
        <source>unexpected MethodBase</source>
        <target state="new">unexpected MethodBase</target>
        <note />
      </trans-unit>
      <trans-unit id="unitNotFound">
        <source>Unit '{0}' not found in FSharp.Core SI module</source>
        <target state="new">Unit '{0}' not found in FSharp.Core SI module</target>
        <note />
      </trans-unit>
      <trans-unit id="unreachable">
        <source>unreachable</source>
        <target state="new">unreachable</target>
        <note />
      </trans-unit>
      <trans-unit id="unsupportedFramework">
        <source>The .NET SDK 4.0 or 4.5 tools could not be found</source>
        <target state="new">The .NET SDK 4.0 or 4.5 tools could not be found</target>
        <note />
      </trans-unit>
      <trans-unit id="useNullForGlobalNamespace">
        <source>Use 'null' for global namespace</source>
        <target state="new">Use 'null' for global namespace</target>
        <note />
      </trans-unit>
      <trans-unit id="wsdlServiceTypeHelp">
        <source>&lt;summary&gt;Provides the types to access a WSDL web service&lt;/summary&gt;&lt;param name='ServiceUri'&gt;The Uri for the WSDL service&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The .wsdlschema file to store locally cached service schema&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the service be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='MessageContract'&gt;Generate Message Contract types (default: false)&lt;/param&gt;&lt;param name='EnableDataBinding'&gt;Implement the System.ComponentModel.INotifyPropertyChanged interface on all DataContract types to enable data binding (default: false)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate classes marked with the Serializable Attribute (default: false)&lt;/param&gt;&lt;param name='Async'&gt;Generate both synchronous and asynchronous method signatures (default: false, which means generate only synchronous method signatures)&lt;/param&gt;&lt;param name='CollectionType'&gt;A fully-qualified or assembly-qualified name of the type to use as a collection data type when code is generated from schemas&lt;/param&gt;</source>
        <target state="new">&lt;summary&gt;Provides the types to access a WSDL web service&lt;/summary&gt;&lt;param name='ServiceUri'&gt;The Uri for the WSDL service&lt;/param&gt;&lt;param name='LocalSchemaFile'&gt;The .wsdlschema file to store locally cached service schema&lt;/param&gt;&lt;param name='ForceUpdate'&gt;Require that a direct connection to the service be available at design-time and force the refresh of the local schema file (default: true)&lt;/param&gt;&lt;param name='ResolutionFolder'&gt;The folder used to resolve relative file paths at compile-time (default: folder containing the project or script)&lt;/param&gt;&lt;param name='MessageContract'&gt;Generate Message Contract types (default: false)&lt;/param&gt;&lt;param name='EnableDataBinding'&gt;Implement the System.ComponentModel.INotifyPropertyChanged interface on all DataContract types to enable data binding (default: false)&lt;/param&gt;&lt;param name='Serializable'&gt;Generate classes marked with the Serializable Attribute (default: false)&lt;/param&gt;&lt;param name='Async'&gt;Generate both synchronous and asynchronous method signatures (default: false, which means generate only synchronous method signatures)&lt;/param&gt;&lt;param name='CollectionType'&gt;A fully-qualified or assembly-qualified name of the type to use as a collection data type when code is generated from schemas&lt;/param&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocConstructSimplifiedContext">
        <source>Construct a simplified data context for this {0}. By default, no credentials are set</source>
        <target state="new">Construct a simplified data context for this {0}. By default, no credentials are set</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocContainsTheSimplifiedContextTypes">
        <source>Contains the simplified context types for the {0}</source>
        <target state="new">Contains the simplified context types for the {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocDisposeSimplifiedContext">
        <source>Disposes the given context</source>
        <target state="new">Disposes the given context</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocExecuteProcedure">
        <source>Execute the '{0}' procedure</source>
        <target state="new">Execute the '{0}' procedure</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocFullServiceTypesAPI">
        <source>&lt;summary&gt;&lt;para&gt;The full API to the {0}.&lt;/para&gt;&lt;para&gt;To use the service via the full API, create an instance of one of the types {1}.&lt;/para&gt;&lt;para&gt;You may need to set the Credentials property on the instance.&lt;/para&gt;&lt;/summary&gt;</source>
        <target state="new">&lt;summary&gt;&lt;para&gt;The full API to the {0}.&lt;/para&gt;&lt;para&gt;To use the service via the full API, create an instance of one of the types {1}.&lt;/para&gt;&lt;para&gt;You may need to set the Credentials property on the instance.&lt;/para&gt;&lt;/summary&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocFullServiceTypesAPINoCredentials">
        <source>&lt;summary&gt;&lt;para&gt;The full API to the {0}.&lt;/para&gt;&lt;para&gt;To use the service via the full API, create an instance of one of the types {1}.&lt;/para&gt;&lt;/summary&gt;</source>
        <target state="new">&lt;summary&gt;&lt;para&gt;The full API to the {0}.&lt;/para&gt;&lt;para&gt;To use the service via the full API, create an instance of one of the types {1}.&lt;/para&gt;&lt;/summary&gt;</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocGetEntities">
        <source>Gets the '{0}' entities from the {1}. This property may be used as the source in a query expression.</source>
        <target state="new">Gets the '{0}' entities from the {1}. This property may be used as the source in a query expression.</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocGetFullContext">
        <source>Gets the full data context object for this {0}</source>
        <target state="new">Gets the full data context object for this {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocGetSimplifiedContext">
        <source>Get a simplified data context for this {0}. By default, no credentials are set</source>
        <target state="new">Get a simplified data context for this {0}. By default, no credentials are set</target>
        <note />
      </trans-unit>
      <trans-unit id="xmlDocSimplifiedDataContext">
        <source>A simplified data context for the {0}. The full data context object is available via the DataContext property.</source>
        <target state="new">A simplified data context for the {0}. The full data context object is available via the DataContext property.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>