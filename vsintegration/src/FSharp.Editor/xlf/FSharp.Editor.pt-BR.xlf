<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../FSharp.Editor.resx">
    <body>
      <trans-unit id="AddMissingEqualsToTypeDefinition">
        <source>Add missing '=' to type definition</source>
        <target state="translated">Adicionar o '=' ausente à definição de tipo</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingFunKeyword">
        <source>Add missing 'fun' keyword</source>
        <target state="translated">Adicionar palavra-chave 'fun' ausente</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingInstanceMemberParameter">
        <source>Add missing instance member parameter</source>
        <target state="translated">Adicionar parâmetro de membro de instância ausente</target>
        <note />
      </trans-unit>
      <trans-unit id="AddNewKeyword">
        <source>Add 'new' keyword</source>
        <target state="translated">Adicionar a palavra-chave 'new'</target>
        <note />
      </trans-unit>
      <trans-unit id="AddReturnTypeAnnotation">
        <source>Add return type annotation</source>
        <target state="translated">Adicionar anotação de tipo de retorno</target>
        <note />
      </trans-unit>
      <trans-unit id="AddTypeAnnotation">
        <source>Add type annotation</source>
        <target state="translated">Adicionar uma anotação de tipo</target>
        <note />
      </trans-unit>
      <trans-unit id="AdvancedPageKeywords">
        <source>Block Structure Guides;
Show structure guidelines for F# code;
Outlining;
Show outlining and collapsible nodes for F# code;
Inline hints;
Display inline type hints (preview);
Display return type hints (preview);
Display inline parameter name hints (preview);
Use Transparent Compiler (experimental);
Live Buffers;
Use live (unsaved) buffers for analysis</source>
        <target state="translated">Guias de Estrutura de Bloco;
Mostrar diretrizes de estrutura para código F#;
Esboço;
Mostrar nós de estrutura de tópicos e recolhíveis para código F#;
Dicas em linha;
Exibir as dicas de tipo em linha (versão prévia);
Exibir as dicas de tipo de retorno (versão prévia);
Exibir dicas de nome de parâmetro embutido (versão prévia);
Use o Compilador Transparente (experimental);
Buffers Dinâmicos;
Usar buffers dinâmicos (não salvos) para análise</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangeEqualsInFieldTypeToColon">
        <source>Use ':' for type in field declaration</source>
        <target state="translated">Usar ":" para tipo na declaração de campo</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeFixesPageKeywords">
        <source>Simplify names (remove unnecessary qualifiers);
Always place open statements at the top level;
Remove unused open statements;
Analyze and suggest fixes for unused values;
Suggest names for unresolved identifiers;</source>
        <target state="translated">Simplificar nomes (remover qualificadores desnecessários);
Sempre colocar instruções abertas no nível superior;
Remover instruções abertas não utilizadas;
Analisar e sugerir correções para valores não utilizados;
Sugerir nomes para identificadores não resolvidos;</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertCSharpUsingToFSharpOpen">
        <source>Convert C# 'using' to F# 'open'</source>
        <target state="translated">Converter 'using' de C# em 'open' de F#</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToAnonymousRecord">
        <source>Convert to Anonymous Record</source>
        <target state="translated">Converter em Registro Anônimo</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToNotEqualsEqualityExpression">
        <source>Use '&lt;&gt;' for inequality check</source>
        <target state="translated">Usar '&lt;&gt;' para a verificação de desigualdade</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToSingleEqualsEqualityExpression">
        <source>Use '=' for equality check</source>
        <target state="translated">Usar '=' para verificação de igualdade</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangePrefixNegationToInfixSubtraction">
        <source>Use subtraction instead of negation</source>
        <target state="translated">Use a subtração em vez da negação</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableLocalValuesClassificationType">
        <source>F# Disposable Values (locals)</source>
        <target state="translated">Valores F# Descartáveis (locais)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTopLevelValuesClassificationType">
        <source>F# Disposable Values (top-level)</source>
        <target state="translated">Valores F# Descartáveis (nível superior)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTypesClassificationType">
        <source>F# Disposable Types</source>
        <target state="translated">Tipos Descartáveis do F#</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpFunctionsClassificationType">
        <source>F# Functions</source>
        <target state="translated">Funções F#</target>
        <note />
      </trans-unit>
      <trans-unit id="FormattingPageKeywords">
        <source>Re-format indentation on paste (Experimental)</source>
        <target state="translated">Reformatar o recuo na pasta (Experimental)</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterface">
        <source>Implement interface</source>
        <target state="translated">Implementar a interface</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterfaceWithoutTypeAnnotation">
        <source>Implement interface without type annotation</source>
        <target state="translated">Implementar a interface sem a anotação de tipo</target>
        <note />
      </trans-unit>
      <trans-unit id="IntelliSensePageKeywords">
        <source>Completion Lists;
Show completion list after a character is deleted;
Show completion list after a character is typed;
Show symbols in unopened namespaces;
Enter key behavior;
Never add new line on enter;
Only add new line on enter after end of fully typed word;
Always add new line on enter;</source>
        <target state="translated">Listas de Conclusão;
Mostrar a lista de conclusão após a exclusão de um caractere;
Mostrar a lista de conclusão depois que um caractere for digitado;
Mostrar símbolos em namespaces não abertos;
Inserir o comportamento da tecla;
Nunca adicionar uma nova linha ao pressionar Enter;
Somente adicionar uma nova linha ao pressionar Enter após digitar toda a palavra;
Sempre adicionar uma nova linha ao pressionar Enter;</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeDeclarationMutable">
        <source>Make declaration 'mutable'</source>
        <target state="translated">Fazer com que a declaração seja 'mutable'</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeOuterBindingRecursive">
        <source>Make '{0}' recursive</source>
        <target state="translated">Tornar '{0}' recursiva</target>
        <note />
      </trans-unit>
      <trans-unit id="PerformancePageKeywords">
        <source>F# Project and Caching Performance Options;
Enable in-memory cross project references;
Enable_partial_type_checking;
IntelliSense Performance Options;
Enable stale data for IntelliSense features;
Time until stale results are used (in milliseconds);
Parallelization (requires restart);
Enable parallel type checking with signature files;
Enable parallel reference resolution;
Enable fast find references &amp; rename (restart required);
Cache parsing results (experimental)</source>
        <target state="translated">Projeto em F# e opções de desempenho em cache;
_Habilitar referências de projeto cruzado na memória;
Habilitar verificação parcial de tipo;
Opções de desempenho do IntelliSense;
Habilitar dados obsoletos para os recursos do IntelliSense;
Tempo até que os resultados obsoletos sejam utilizados (em milissegundos);
Paralelização (requer reinicialização);
Habilitar a verificação de tipo paralelo com arquivos de assinatura;
Habilitar a resolução de referência paralela;
Habilitar referências de localização rápida e renomear (reinicialização necessária);
Resultados da análise de cache (experimental)</target>
        <note />
      </trans-unit>
      <trans-unit id="PrefixValueNameWithUnderscore">
        <source>Prefix '{0}' with underscore</source>
        <target state="translated">Prefixo '{0}' sem sublinhado</target>
        <note />
      </trans-unit>
      <trans-unit id="QuickInfoPageKeywords">
        <source>Formatting;
Preferred description width in characters;
Format signature to the given width by adding line breaks conforming with F# syntax rules;
Navigation links;
Show navigation links as;
Solid underline;
Dot underline;
Dash underline;
Show remarks in Quick Info</source>
        <target state="translated">Formatação;
Largura de descrição preferencial em caracteres;
Formate a assinatura para a largura fornecida adicionando quebras de linha em conformidade com as regras de sintaxe de F#;
Links de navegação;
Exibir link de navegação como;
Sublinhado sólido;
Sublinhado pontilhado;
Sublinhado tracejado;
Mostrar os comentários nas Informações Rápidas</target>
        <note />
      </trans-unit>
      <trans-unit id="RemarksHeader">
        <source>Remarks:</source>
        <target state="translated">Comentários:</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturn">
        <source>Remove 'return'</source>
        <target state="translated">Remover 'return'</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturnBang">
        <source>Remove 'return!'</source>
        <target state="translated">Remover 'return!'</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnnecessaryParentheses">
        <source>Remove unnecessary parentheses</source>
        <target state="translated">Remover os parênteses desnecessários</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedBinding">
        <source>Remove unused binding</source>
        <target state="translated">Remover associação não usada</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYield">
        <source>Remove 'yield'</source>
        <target state="translated">Remover 'yield'</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYieldBang">
        <source>Remove 'yield!'</source>
        <target state="translated">Remover 'yield!'</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToUnderscore">
        <source>Rename '{0}' to '_'</source>
        <target state="translated">Renomear '{0}' para '_'</target>
        <note />
      </trans-unit>
      <trans-unit id="ReturnsHeader">
        <source>Returns:</source>
        <target state="translated">Retorna:</target>
        <note />
      </trans-unit>
      <trans-unit id="SimplifyName">
        <source>Simplify name</source>
        <target state="translated">Simplificar o nome</target>
        <note />
      </trans-unit>
      <trans-unit id="NameCanBeSimplified">
        <source>Name can be simplified.</source>
        <target state="translated">Nome pode ser simplificado.</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpMutableVarsClassificationType">
        <source>F# Mutable Variables / Reference Cells</source>
        <target state="translated">Variações Mutáveis/Células de Referência do F#</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPrintfFormatClassificationType">
        <source>F# Printf Format</source>
        <target state="translated">Formato de Impressão do F#</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPropertiesClassificationType">
        <source>F# Properties</source>
        <target state="translated">Propriedades do F#</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedOpens">
        <source>Remove unused open declarations</source>
        <target state="translated">Remover declarações abertas não usadas</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedEqualsInFieldExpectedColon">
        <source>Unexpected symbol '=' in field declaration. Expected ':' or other token.</source>
        <target state="translated">Símbolo inesperado "=" na declaração de campo. "." ou outro token é esperado.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnusedOpens">
        <source>Open declaration can be removed.</source>
        <target state="translated">A declaração aberta pode ser removida.</target>
        <note />
      </trans-unit>
      <trans-unit id="6008">
        <source>IntelliSense</source>
        <target state="translated">IntelliSense</target>
        <note />
      </trans-unit>
      <trans-unit id="6009">
        <source>QuickInfo</source>
        <target state="translated">QuickInfo</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAssemblyReference">
        <source>Add an assembly reference to '{0}'</source>
        <target state="translated">Adicionar uma referência de assembly para '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="AddProjectReference">
        <source>Add a project reference to '{0}'</source>
        <target state="translated">Adicionar uma referência de projeto para '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="6010">
        <source>Code Fixes</source>
        <target state="translated">Correções de Código</target>
        <note />
      </trans-unit>
      <trans-unit id="6011">
        <source>Performance</source>
        <target state="translated">Desempenho</target>
        <note />
      </trans-unit>
      <trans-unit id="TheValueIsUnused">
        <source>The value is unused</source>
        <target state="translated">O valor é não usado</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotDetermineSymbol">
        <source>Cannot determine the symbol under the caret</source>
        <target state="translated">Não é possível determinar o símbolo sob o acento circunflexo</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotNavigateUnknown">
        <source>Cannot navigate to the requested location</source>
        <target state="translated">Não é possível navegar para a localização solicitada</target>
        <note />
      </trans-unit>
      <trans-unit id="LocatingSymbol">
        <source>Locating the symbol under the caret...</source>
        <target state="translated">Localizando o símbolo sob o acento circunflexo...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigatingTo">
        <source>Navigating to symbol...</source>
        <target state="translated">Navegando para o símbolo...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigateToFailed">
        <source>Navigate to symbol failed: {0}</source>
        <target state="translated">Navegação para o símbolo com falha: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ExceptionsHeader">
        <source>Exceptions:</source>
        <target state="translated">Exceções:</target>
        <note />
      </trans-unit>
      <trans-unit id="GenericParametersHeader">
        <source>Generic parameters:</source>
        <target state="translated">Parâmetros genéricos:</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToDoubleUnderscore">
        <source>Rename '{0}' to '__'</source>
        <target state="translated">Renomear '{0}' para '__'</target>
        <note />
      </trans-unit>
      <trans-unit id="6012">
        <source>Advanced</source>
        <target state="translated">Avançado</target>
        <note />
      </trans-unit>
      <trans-unit id="6014">
        <source>Formatting</source>
        <target state="translated">Formatação</target>
        <note />
      </trans-unit>
      <trans-unit id="UseFSharpLambda">
        <source>Use F# lambda syntax</source>
        <target state="translated">Usar a sintaxe lambda F#</target>
        <note />
      </trans-unit>
      <trans-unit id="UseMutationWhenValueIsMutable">
        <source>Use '&lt;-' to mutate value</source>
        <target state="translated">Usar '&lt;-' para modificar o valor</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNameof">
        <source>Use 'nameof'</source>
        <target state="translated">Usar 'nameof'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseTripleQuotedInterpolation">
        <source>Use triple quoted string interpolation.</source>
        <target state="translated">Usar interpolação de cadeia de caracteres entre aspas triplas.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastKeyword">
        <source>Use 'upcast'</source>
        <target state="translated">Usar 'upcast'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastOperator">
        <source>Use ':&gt;' operator</source>
        <target state="translated">Usar o operador ':&gt;'</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNotForNegation">
        <source>Use 'not' to negate expression</source>
        <target state="translated">Use 'not' para negar a expressão</target>
        <note />
      </trans-unit>
      <trans-unit id="UseValueInsteadOfDeref">
        <source>Use '.Value' to dereference expression</source>
        <target state="translated">Use '.Value' para desreferenciar a expressão</target>
        <note />
      </trans-unit>
      <trans-unit id="WrapExpressionInParentheses">
        <source>Wrap expression in parentheses</source>
        <target state="translated">Coloque a expressão entre parênteses</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>