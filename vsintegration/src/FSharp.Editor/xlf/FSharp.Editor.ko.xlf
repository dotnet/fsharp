<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../FSharp.Editor.resx">
    <body>
      <trans-unit id="AddMissingEqualsToTypeDefinition">
        <source>Add missing '=' to type definition</source>
        <target state="translated">형식 정의에 누락된 '=' 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingFunKeyword">
        <source>Add missing 'fun' keyword</source>
        <target state="translated">누락된 'fun' 키워드 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingInstanceMemberParameter">
        <source>Add missing instance member parameter</source>
        <target state="translated">누락된 인스턴스 멤버 매개 변수 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddNewKeyword">
        <source>Add 'new' keyword</source>
        <target state="translated">'new' 키워드 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddReturnTypeAnnotation">
        <source>Add return type annotation</source>
        <target state="translated">반환 형식 주석 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddTypeAnnotation">
        <source>Add type annotation</source>
        <target state="translated">형식 주석 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AdvancedPageKeywords">
        <source>Block Structure Guides;
Show structure guidelines for F# code;
Outlining;
Show outlining and collapsible nodes for F# code;
Inline hints;
Display inline type hints (preview);
Display return type hints (preview);
Display inline parameter name hints (preview);
Use Transparent Compiler (experimental);
Live Buffers;
Use live (unsaved) buffers for analysis</source>
        <target state="translated">블록 구조 가이드;
F# 코드에 대한 구조 지침 표시;
개요;
F# 코드에 대한 개요 및 축소 가능한 노드 표시;
인라인 힌트;
인라인 형식 힌트 표시(미리 보기);
반환 형식 힌트 표시(미리 보기);
인라인 매개 변수 이름 힌트 표시(미리 보기);
투명한 컴파일러 사용(실험적);
라이브 버퍼;
분석에 라이브(저장되지 않은) 버퍼 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangeEqualsInFieldTypeToColon">
        <source>Use ':' for type in field declaration</source>
        <target state="translated">필드 선언의 형식에 ':' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="CodeFixesPageKeywords">
        <source>Simplify names (remove unnecessary qualifiers);
Always place open statements at the top level;
Remove unused open statements;
Analyze and suggest fixes for unused values;
Suggest names for unresolved identifiers;</source>
        <target state="translated">이름 간소화(불필요한 한정자 제거),
항상 최상위 수준에 open 문 배치,
사용되지 않는 열린 문을 제거,
사용되지 않는 값에 대한 수정 사항 분석 및 제안,
확인되지 않은 식별자의 이름 제안,</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertCSharpUsingToFSharpOpen">
        <source>Convert C# 'using' to F# 'open'</source>
        <target state="translated">C# 'using'을 F# 'open'으로 변환</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToAnonymousRecord">
        <source>Convert to Anonymous Record</source>
        <target state="translated">익명 레코드로 변환</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToNotEqualsEqualityExpression">
        <source>Use '&lt;&gt;' for inequality check</source>
        <target state="translated">같지 않음 검사에 '&lt;&gt;' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToSingleEqualsEqualityExpression">
        <source>Use '=' for equality check</source>
        <target state="translated">같음 검사에 '=' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangePrefixNegationToInfixSubtraction">
        <source>Use subtraction instead of negation</source>
        <target state="translated">부정 대신 빼기 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableLocalValuesClassificationType">
        <source>F# Disposable Values (locals)</source>
        <target state="translated">F# 삭제 가능한 값(로컬)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTopLevelValuesClassificationType">
        <source>F# Disposable Values (top-level)</source>
        <target state="translated">F# 삭제 가능한 값(최상위 수준)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTypesClassificationType">
        <source>F# Disposable Types</source>
        <target state="translated">F# 삭제 가능한 형식</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpFunctionsClassificationType">
        <source>F# Functions</source>
        <target state="translated">F# 함수</target>
        <note />
      </trans-unit>
      <trans-unit id="FormattingPageKeywords">
        <source>Re-format indentation on paste (Experimental)</source>
        <target state="translated">붙여넣을 때 들여쓰기 서식 다시 지정(실험적)</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterface">
        <source>Implement interface</source>
        <target state="translated">인터페이스 구현</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterfaceWithoutTypeAnnotation">
        <source>Implement interface without type annotation</source>
        <target state="translated">형식 주석 없이 인터페이스 구현</target>
        <note />
      </trans-unit>
      <trans-unit id="IntelliSensePageKeywords">
        <source>Completion Lists;
Show completion list after a character is deleted;
Show completion list after a character is typed;
Show symbols in unopened namespaces;
Enter key behavior;
Never add new line on enter;
Only add new line on enter after end of fully typed word;
Always add new line on enter;</source>
        <target state="translated">완료 목록,
문자가 삭제된 후 완성 목록 표시,
문자를 입력한 후 완성 목록 표시,
열지 않은 네임스페이스에 기호 표시,
키 동작 입력,
&lt;Enter&gt; 키를 누를 때 새 줄을 추가하지 않음,
완전히 입력된 단어의 끝 뒤에 Enter 키를 누를 때만 새 줄 추가,
Enter 키를 누를 때 항상 새 줄 추가,</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeDeclarationMutable">
        <source>Make declaration 'mutable'</source>
        <target state="translated">선언을 '변경 가능'으로 지정</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeOuterBindingRecursive">
        <source>Make '{0}' recursive</source>
        <target state="translated">'{0}'을(를) 재귀적으로 만들기</target>
        <note />
      </trans-unit>
      <trans-unit id="PerformancePageKeywords">
        <source>F# Project and Caching Performance Options;
Enable in-memory cross project references;
Enable_partial_type_checking;
IntelliSense Performance Options;
Enable stale data for IntelliSense features;
Time until stale results are used (in milliseconds);
Parallelization (requires restart);
Enable parallel type checking with signature files;
Enable parallel reference resolution;
Enable fast find references &amp; rename (restart required)</source>
        <target state="needs-review-translation">F# 프로젝트 및 캐싱 성능 옵션;
메모리 내 크로스 프로젝트 참조 사용;
Enable_partial_type_checking;
IntelliSense 성능 옵션;
IntelliSense 기능에 대해 부실 데이터 사용;
부실 결과가 사용될 때까지의 시간(밀리초);
병렬화(다시 시작 필요);
서명 파일로 병렬 유형 검사 사용;
병렬 참조 해상도 사용;
빠른 찾기 참조 및 이름 바꾸기 사용(다시 시작 필요);
캐시 구문 분석 결과(실험적)</target>
        <note />
      </trans-unit>
      <trans-unit id="PrefixValueNameWithUnderscore">
        <source>Prefix '{0}' with underscore</source>
        <target state="translated">밑줄이 있는 '{0}' 접두사</target>
        <note />
      </trans-unit>
      <trans-unit id="QuickInfoPageKeywords">
        <source>Formatting;
Preferred description width in characters;
Format signature to the given width by adding line breaks conforming with F# syntax rules;
Navigation links;
Show navigation links as;
Solid underline;
Dot underline;
Dash underline;
Show remarks in Quick Info</source>
        <target state="translated">서식;
기본 설정 설명 너비(문자);
F# 구문 규칙에 맞는 줄 바꿈을 추가하여 지정된 너비에 시그니처의 서식 지정;
탐색 링크;
탐색 링크를 다음으로 표시;
실선 밑줄;
점 밑줄;
대시 밑줄;
요약 정보에 설명 표시</target>
        <note />
      </trans-unit>
      <trans-unit id="RemarksHeader">
        <source>Remarks:</source>
        <target state="translated">설명:</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturn">
        <source>Remove 'return'</source>
        <target state="translated">'return' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturnBang">
        <source>Remove 'return!'</source>
        <target state="translated">'return!' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnnecessaryParentheses">
        <source>Remove unnecessary parentheses</source>
        <target state="translated">불필요한 괄호 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedBinding">
        <source>Remove unused binding</source>
        <target state="translated">사용되지 않는 바인딩 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYield">
        <source>Remove 'yield'</source>
        <target state="translated">'yield' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYieldBang">
        <source>Remove 'yield!'</source>
        <target state="translated">'yield!' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToUnderscore">
        <source>Rename '{0}' to '_'</source>
        <target state="translated">'{0}'의 이름을 '_'로 바꾸기</target>
        <note />
      </trans-unit>
      <trans-unit id="ReturnsHeader">
        <source>Returns:</source>
        <target state="translated">반환 값:</target>
        <note />
      </trans-unit>
      <trans-unit id="SimplifyName">
        <source>Simplify name</source>
        <target state="translated">이름 단순화</target>
        <note />
      </trans-unit>
      <trans-unit id="NameCanBeSimplified">
        <source>Name can be simplified.</source>
        <target state="translated">이름은 간단하게 줄일 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpMutableVarsClassificationType">
        <source>F# Mutable Variables / Reference Cells</source>
        <target state="translated">F# 변경할 수 있는 변수/참조 셀</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPrintfFormatClassificationType">
        <source>F# Printf Format</source>
        <target state="translated">F# Printf 형식</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPropertiesClassificationType">
        <source>F# Properties</source>
        <target state="translated">F# 속성</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedOpens">
        <source>Remove unused open declarations</source>
        <target state="translated">사용하지 않는 열려 있는 선언 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="UnexpectedEqualsInFieldExpectedColon">
        <source>Unexpected symbol '=' in field declaration. Expected ':' or other token.</source>
        <target state="translated">필드 선언에 예기치 않은 기호 '='가 있습니다. ':' 또는 다른 토큰이 필요합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UnusedOpens">
        <source>Open declaration can be removed.</source>
        <target state="translated">열려 있는 선언을 제거할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="6008">
        <source>IntelliSense</source>
        <target state="translated">IntelliSense</target>
        <note />
      </trans-unit>
      <trans-unit id="6009">
        <source>QuickInfo</source>
        <target state="translated">QuickInfo</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAssemblyReference">
        <source>Add an assembly reference to '{0}'</source>
        <target state="translated">'{0}'에 어셈블리 참조 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddProjectReference">
        <source>Add a project reference to '{0}'</source>
        <target state="translated">'{0}'에 프로젝트 참조 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="6010">
        <source>Code Fixes</source>
        <target state="translated">코드 수정 사항</target>
        <note />
      </trans-unit>
      <trans-unit id="6011">
        <source>Performance</source>
        <target state="translated">성능</target>
        <note />
      </trans-unit>
      <trans-unit id="TheValueIsUnused">
        <source>The value is unused</source>
        <target state="translated">값이 사용되지 않습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotDetermineSymbol">
        <source>Cannot determine the symbol under the caret</source>
        <target state="translated">캐럿에서 기호를 확인할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotNavigateUnknown">
        <source>Cannot navigate to the requested location</source>
        <target state="translated">요청된 위치로 이동할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="LocatingSymbol">
        <source>Locating the symbol under the caret...</source>
        <target state="translated">캐럿에서 기호를 찾는 중...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigatingTo">
        <source>Navigating to symbol...</source>
        <target state="translated">기호로 이동 중...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigateToFailed">
        <source>Navigate to symbol failed: {0}</source>
        <target state="translated">기호로 이동 실패: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ExceptionsHeader">
        <source>Exceptions:</source>
        <target state="translated">예외:</target>
        <note />
      </trans-unit>
      <trans-unit id="GenericParametersHeader">
        <source>Generic parameters:</source>
        <target state="translated">제네릭 매개 변수:</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToDoubleUnderscore">
        <source>Rename '{0}' to '__'</source>
        <target state="translated">'{0}'의 이름을 '__'로 바꾸기</target>
        <note />
      </trans-unit>
      <trans-unit id="6012">
        <source>Advanced</source>
        <target state="translated">고급</target>
        <note />
      </trans-unit>
      <trans-unit id="6014">
        <source>Formatting</source>
        <target state="translated">서식</target>
        <note />
      </trans-unit>
      <trans-unit id="UseFSharpLambda">
        <source>Use F# lambda syntax</source>
        <target state="translated">F# 람다 구문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseMutationWhenValueIsMutable">
        <source>Use '&lt;-' to mutate value</source>
        <target state="translated">'&lt;-'를 사용하여 값 변경</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNameof">
        <source>Use 'nameof'</source>
        <target state="translated">'nameof' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseTripleQuotedInterpolation">
        <source>Use triple quoted string interpolation.</source>
        <target state="translated">삼중 따옴표로 묶인 분자열 보간을 사용합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastKeyword">
        <source>Use 'upcast'</source>
        <target state="translated">'upcast' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastOperator">
        <source>Use ':&gt;' operator</source>
        <target state="translated">':&gt;' 연산자 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNotForNegation">
        <source>Use 'not' to negate expression</source>
        <target state="translated">식을 부정하려면 'not' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseValueInsteadOfDeref">
        <source>Use '.Value' to dereference expression</source>
        <target state="translated">식을 역참조하려면 '.Value' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="WrapExpressionInParentheses">
        <source>Wrap expression in parentheses</source>
        <target state="translated">식을 괄호로 래핑</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>