<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../FSharp.Editor.resx">
    <body>
      <trans-unit id="AddMissingEqualsToTypeDefinition">
        <source>Add missing '=' to type definition</source>
        <target state="translated">형식 정의에 누락된 '=' 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingFunKeyword">
        <source>Add missing 'fun' keyword</source>
        <target state="translated">누락된 'fun' 키워드 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingInstanceMemberParameter">
        <source>Add missing instance member parameter</source>
        <target state="translated">누락된 인스턴스 멤버 매개 변수 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddNewKeyword">
        <source>Add 'new' keyword</source>
        <target state="translated">'new' 키워드 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddTypeAnnotation">
        <source>Add type annotation</source>
        <target state="translated">형식 주석 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToAnonymousRecord">
        <source>Convert to Anonymous Record</source>
        <target state="translated">익명 레코드로 변환</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToNotEqualsEqualityExpression">
        <source>Use '&lt;&gt;' for inequality check</source>
        <target state="translated">같지 않음 검사에 '&lt;&gt;' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToSingleEqualsEqualityExpression">
        <source>Use '=' for equality check</source>
        <target state="translated">같음 검사에 '=' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="ChangePrefixNegationToInfixSubtraction">
        <source>Use subtraction instead of negation</source>
        <target state="translated">부정 대신 빼기 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableLocalValuesClassificationType">
        <source>F# Disposable Values (locals)</source>
        <target state="translated">F# 삭제 가능한 값(로컬)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTopLevelValuesClassificationType">
        <source>F# Disposable Values (top-level)</source>
        <target state="translated">F# 삭제 가능한 값(최상위 수준)</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpDisposableTypesClassificationType">
        <source>F# Disposable Types</source>
        <target state="translated">F# 삭제 가능한 형식</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpFunctionsClassificationType">
        <source>F# Functions</source>
        <target state="translated">F# 함수</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterface">
        <source>Implement interface</source>
        <target state="translated">인터페이스 구현</target>
        <note />
      </trans-unit>
      <trans-unit id="ImplementInterfaceWithoutTypeAnnotation">
        <source>Implement interface without type annotation</source>
        <target state="translated">형식 주석 없이 인터페이스 구현</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeDeclarationMutable">
        <source>Make declaration 'mutable'</source>
        <target state="translated">선언을 '변경 가능'으로 지정</target>
        <note />
      </trans-unit>
      <trans-unit id="MakeOuterBindingRecursive">
        <source>Make '{0}' recursive</source>
        <target state="translated">'{0}'을(를) 재귀적으로 만들기</target>
        <note />
      </trans-unit>
      <trans-unit id="PrefixValueNameWithUnderscore">
        <source>Prefix '{0}' with underscore</source>
        <target state="translated">밑줄이 있는 '{0}' 접두사</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturn">
        <source>Remove 'return'</source>
        <target state="translated">'return' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveReturnBang">
        <source>Remove 'return!'</source>
        <target state="translated">'return!' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedBinding">
        <source>Remove unused binding</source>
        <target state="translated">사용되지 않는 바인딩 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYield">
        <source>Remove 'yield'</source>
        <target state="translated">'yield' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveYieldBang">
        <source>Remove 'yield!'</source>
        <target state="translated">'yield!' 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToUnderscore">
        <source>Rename '{0}' to '_'</source>
        <target state="translated">'{0}'의 이름을 '_'로 바꾸기</target>
        <note />
      </trans-unit>
      <trans-unit id="SimplifyName">
        <source>Simplify name</source>
        <target state="translated">이름 단순화</target>
        <note />
      </trans-unit>
      <trans-unit id="NameCanBeSimplified">
        <source>Name can be simplified.</source>
        <target state="translated">이름을 간단하게 줄일 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpMutableVarsClassificationType">
        <source>F# Mutable Variables / Reference Cells</source>
        <target state="translated">F# 변경할 수 있는 변수/참조 셀</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPrintfFormatClassificationType">
        <source>F# Printf Format</source>
        <target state="translated">F# Printf 형식</target>
        <note />
      </trans-unit>
      <trans-unit id="FSharpPropertiesClassificationType">
        <source>F# Properties</source>
        <target state="translated">F# 속성</target>
        <note />
      </trans-unit>
      <trans-unit id="RemoveUnusedOpens">
        <source>Remove unused open declarations</source>
        <target state="translated">사용하지 않는 열려 있는 선언 제거</target>
        <note />
      </trans-unit>
      <trans-unit id="UnusedOpens">
        <source>Open declaration can be removed.</source>
        <target state="translated">열려 있는 선언을 제거할 수 있습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="6008">
        <source>IntelliSense</source>
        <target state="translated">IntelliSense</target>
        <note />
      </trans-unit>
      <trans-unit id="6009">
        <source>QuickInfo</source>
        <target state="translated">QuickInfo</target>
        <note />
      </trans-unit>
      <trans-unit id="AddAssemblyReference">
        <source>Add an assembly reference to '{0}'</source>
        <target state="translated">'{0}'에 어셈블리 참조 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="AddProjectReference">
        <source>Add a project reference to '{0}'</source>
        <target state="translated">'{0}'에 프로젝트 참조 추가</target>
        <note />
      </trans-unit>
      <trans-unit id="6010">
        <source>Code Fixes</source>
        <target state="translated">코드 수정 사항</target>
        <note />
      </trans-unit>
      <trans-unit id="6011">
        <source>Performance</source>
        <target state="translated">성능</target>
        <note />
      </trans-unit>
      <trans-unit id="TheValueIsUnused">
        <source>The value is unused</source>
        <target state="translated">값이 사용되지 않습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotDetermineSymbol">
        <source>Cannot determine the symbol under the caret</source>
        <target state="translated">캐럿에서 기호를 확인할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotNavigateUnknown">
        <source>Cannot navigate to the requested location</source>
        <target state="translated">요청된 위치로 이동할 수 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="LocatingSymbol">
        <source>Locating the symbol under the caret...</source>
        <target state="translated">캐럿에서 기호를 찾는 중...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigatingTo">
        <source>Navigating to symbol...</source>
        <target state="translated">기호로 이동 중...</target>
        <note />
      </trans-unit>
      <trans-unit id="NavigateToFailed">
        <source>Navigate to symbol failed: {0}</source>
        <target state="translated">기호로 이동 실패: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="ExceptionsHeader">
        <source>Exceptions:</source>
        <target state="translated">예외:</target>
        <note />
      </trans-unit>
      <trans-unit id="GenericParametersHeader">
        <source>Generic parameters:</source>
        <target state="translated">제네릭 매개 변수:</target>
        <note />
      </trans-unit>
      <trans-unit id="RenameValueToDoubleUnderscore">
        <source>Rename '{0}' to '__'</source>
        <target state="translated">'{0}'의 이름을 '__'로 바꾸기</target>
        <note />
      </trans-unit>
      <trans-unit id="6012">
        <source>Advanced</source>
        <target state="translated">고급</target>
        <note />
      </trans-unit>
      <trans-unit id="6013">
        <source>CodeLens</source>
        <target state="translated">CodeLens</target>
        <note />
      </trans-unit>
      <trans-unit id="6014">
        <source>Formatting</source>
        <target state="translated">서식</target>
        <note />
      </trans-unit>
      <trans-unit id="UseFSharpLambda">
        <source>Use F# lambda syntax</source>
        <target state="translated">F# 람다 구문 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseMutationWhenValueIsMutable">
        <source>Use '&lt;-' to mutate value</source>
        <target state="translated">'&lt;-'를 사용하여 값 변경</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNameof">
        <source>Use 'nameof'</source>
        <target state="translated">'nameof' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastKeyword">
        <source>Use 'upcast'</source>
        <target state="translated">'upcast' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseUpcastOperator">
        <source>Use ':&gt;' operator</source>
        <target state="translated">':&gt;' 연산자 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseNotForNegation">
        <source>Use 'not' to negate expression</source>
        <target state="translated">식을 부정하려면 'not' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="UseValueInsteadOfDeref">
        <source>Use '.Value' to dereference expression</source>
        <target state="translated">식을 역참조하려면 '.Value' 사용</target>
        <note />
      </trans-unit>
      <trans-unit id="WrapExpressionInParentheses">
        <source>Wrap expression in parentheses</source>
        <target state="translated">식을 괄호로 래핑</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>