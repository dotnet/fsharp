# CI and PR triggers
trigger:
  branches:
    include:
    - main
    - feature/*
    - release/*
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/
    - .vscode/*
    - .devcontainer/*
    - tests/scripts/
    - attributions.md
    - CODE_OF_CONDUCT.md
    - DEVGUIDE.md
    - INTERNAL.md
    - Language-Version-History.md
    - License.txt
    - README.md
    - release-notes.md
    - TESTGUIDE.md

variables:
  - name: FSharpReleaseBranchName
    value: 1espm
  - name: VSInsertionTargetBranchName
    value: main
  - name: _TeamName
    value: FSharp
  - name: TeamName
    value: FSharp
  - name: _BuildConfig
    value: Release
  - name: _SignType
    value: Real
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: VisualStudioDropName
    value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
  - name: Codeql.Enabled
    value: true
  - name: _DotNetValidationArtifactsCategory
    value: .NETCoreValidation
  - group: DotNet-FSharp-SDLValidation-Params
  - template: /eng/common/templates-official/variables/pool-providers.yml@self

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    #featureFlags:
    #  autoBaseline: true
    sdl:
      binskim:
        enabled: true
      policheck:
        enabled: true
      sbom:
        enabled: false # VS SBOM is generated with other steps
        justificationForDisabling: 'SBOM for F# is generated via build process.'
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022-pt
        os: windows
    stages:
    - stage: build
      displayName: Build
      jobs:
      #-------------------------------------------------------------------------------------------------------------------#
      #                                                  Signed build                                                     #
      #-------------------------------------------------------------------------------------------------------------------#
      # Localization: we only run it for specific release branches.
      - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/release/dev17.9') }}:
        - template: /eng/common/templates-official/job/onelocbuild.yml@self
          parameters:
            MirrorRepo: fsharp
            MirrorBranch: $(FSharpReleaseBranchName)
            LclSource: lclFilesfromPackage
            LclPackageId: 'LCL-JUNO-PROD-FSHARP'
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enableMicrobuild: true
          enablePublishBuildArtifacts: true
          enablePublishTestResults: false
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: $(_PublishUsingPipelines)
          enableSourceBuild: true
          enableTelemetry: true
          helixRepo: dotnet/fsharp
          poolName: $(DncEngInternalBuildPool)
          poolDemands: 1es-windows-2022-pt
          poolOs: windows
          jobs:
          - job: Full_Signed
            pool:
              name: NetCore1ESPool-Svc-Internal
              demands: 1es-windows-2022-pt
              os: windows
            timeoutInMinutes: 300
            templateContext:
              mb:
                signing:
                  enabled: true
                  feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
                  signType: $(_SignType)
                  zipSources: false
              outputs:
                - output: pipelineArtifact
                  displayName: 'Publish Test Logs'
                  condition: and(succeededOrFailed(), ne(variables['SkipTests'], 'true'))
                  targetPath: $(Build.SourcesDirectory)\artifacts\TestResults\$(_BuildConfig)
                  artifactName: 'Test Logs'
                - output: pipelineArtifact
                  displayName: 'Publish Artifact Packages'
                  condition: succeeded()
                  targetPath: $(Build.SourcesDirectory)\artifacts\packages\$(_BuildConfig)
                  artifactName: 'Packages'
                - output: pipelineArtifact
                  displayName: 'Publish Artifact VSSetup'
                  condition: succeeded()
                  targetPath: $(Build.SourcesDirectory)\artifacts\VSSetup\$(_BuildConfig)\Insertion
                  artifactName: 'VSSetup'
                - output: pipelineArtifact
                  displayName: 'Publish Nightly VSIX'
                  condition: succeeded()
                  targetPath: $(Build.SourcesDirectory)\artifacts\VSSetup\$(_BuildConfig)\VisualFSharpDebug.vsix
                  artifactName: 'Nightly'
                - output: pipelineArtifact
                  displayName: 'Publish Artifact Symbols'
                  condition: succeeded()
                  targetPath: $(Build.SourcesDirectory)\artifacts\SymStore\$(_BuildConfig)
                  artifactName: 'NativeSymbols'
                - output: microBuildVstsDrop
                  dropFolder: '$(Build.SourcesDirectory)\artifacts\VSSetup\$(_BuildConfig)\Insertion'
                  dropName: $(VisualStudioDropName)
                  dropRetentionDays: 90
                  accessToken: $(dn-bot-devdiv-drop-rw-code-rw)
                  dropServiceUri: 'https://devdiv.artifacts.visualstudio.com'
                  vsDropServiceUri: 'https://vsdrop.corp.microsoft.com/file/v1'

            variables:
            - group: DotNet-Symbol-Server-Pats
            - group: DotNet-DevDiv-Insertion-Workflow-Variables
            - name: _SignType
              value: Real
            steps:
            - checkout: self
              clean: true
            - template: /eng/restore-internal-tools.yml
            - script: eng\CIBuild.cmd
                      -configuration $(_BuildConfig)
                      -prepareMachine
                      -testAllButIntegration
                      -officialSkipTests $(SkipTests)
                      /p:SignType=$(_SignType)
                      /p:DotNetSignType=$(_SignType)
                      /p:MicroBuild_SigningEnabled=true
                      /p:OverridePackageSource=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
                      /p:TeamName=$(_TeamName)
                      /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                      /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
                      /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                      /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                      /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
                      /p:PublishToSymbolServer=true
                      /p:VisualStudioDropName=$(VisualStudioDropName)
                      /p:GenerateSbom=true
              env:
                  NativeToolsOnMachine: true

    #---------------------------------------------------------------------------------------------------------------------#
    #                                                    Post Build                                                       #
    #---------------------------------------------------------------------------------------------------------------------#
    - template: eng/common/templates-official/post-build/post-build.yml
      parameters:
        publishingInfraVersion: 3
        # Symbol validation is not entirely reliable as of yet, so should be turned off until https://github.com/dotnet/arcade/issues/2871 is resolved.
        enableSymbolValidation: false
        # SourceLink improperly looks for generated files.  See https://github.com/dotnet/arcade/issues/3069
        enableSourceLinkValidation: false
        # Enable SDL validation, passing through values from the 'DotNet-FSharp-SDLValidation-Params' group.
        SDLValidationParameters:
          enable: true
          params: >-
            -SourceToolsList @("policheck","credscan")
            -ArtifactToolsList @("binskim")
            -BinskimAdditionalRunConfigParams @("IgnorePdbLoadError < True","Recurse < True")
            -TsaInstanceURL $(_TsaInstanceURL)
            -TsaProjectName $(_TsaProjectName)
            -TsaNotificationEmail $(_TsaNotificationEmail)
            -TsaCodebaseAdmin $(_TsaCodebaseAdmin)
            -TsaBugAreaPath $(_TsaBugAreaPath)
            -TsaIterationPath $(_TsaIterationPath)
            -TsaRepositoryName "FSharp"
            -TsaCodebaseName "FSharp-GitHub"
            -TsaPublish $True
            -PoliCheckAdditionalRunConfigParams @("UserExclusionPath < $(Build.SourcesDirectory)/eng/policheck_exclusions.xml")

    #---------------------------------------------------------------------------------------------------------------------#
    #                                                   VS Insertion                                                      #
    #---------------------------------------------------------------------------------------------------------------------#
    - template: eng/release/insert-into-vs.yml
      parameters:
        componentBranchName: refs/heads/$(FSharpReleaseBranchName)
        insertTargetBranch: $(VSInsertionBranchName)
        insertTeamEmail: fsharpteam@microsoft.com
        insertTeamName: 'F#'
        completeInsertion: 'auto'
